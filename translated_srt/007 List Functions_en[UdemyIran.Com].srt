1
00:00:00,050 --> 00:00:00,800
در این سخنرانی

2
00:00:00,800 --> 00:00:03,200
بیایید در مورد توابع لیست صحبت کنیم.

3
00:00:03,200 --> 00:00:08,750
بنابراین پایتون در واقع چند کارکرد را به همراه لیستی که می توانیم از آنها استفاده کنیم ، در اختیار ما قرار می دهد

4
00:00:08,780 --> 00:00:14,150
داده های موجود در لیست را دستکاری کرده و اساساً برخی از اطلاعات را از لیستی که داریم استخراج می کنیم.

5
00:00:14,180 --> 00:00:19,340
بنابراین ما قصد داریم در مورد برخی از ویژگی ها یا برخی از کارکردهای ارائه شده توسط لیست بحث کنیم

6
00:00:19,340 --> 00:00:21,920
دستکاری لیست را بسیار آسان تر کنید.

7
00:00:21,920 --> 00:00:24,560
بنابراین بیایید جلو برویم و بیایید شروع کنیم.

8
00:00:24,560 --> 00:00:30,050
بنابراین اولین عملکردی که در مورد آن بحث خواهیم کرد عملکرد طول یا عملکرد LEN است.

9
00:00:30,050 --> 00:00:35,390
بنابراین هر زمان که مجبور شوید طول لیست خود را محاسبه کنید ، یعنی اگر می خواهید شماره را بررسی کنید

10
00:00:35,390 --> 00:00:39,860
از مواردی که در واقع در لیست موجود هستند ، می توانید از عملکرد طول استفاده کنید.

11
00:00:39,860 --> 00:00:46,280
بنابراین هر زمان که می خواهید طول لیست خود را محاسبه کنید ، به سادگی می گویید لن ، که به معنای طول است ،

12
00:00:46,280 --> 00:00:50,960
و سپس به سادگی در لیستی که می خواهید طول را محاسبه کنید ، عبور می کنید.

13
00:00:50,960 --> 00:00:54,080
بنابراین در این حالت ، من می خواهم بررسی کنم که میوه های لیست چقدر است.

14
00:00:54,080 --> 00:00:59,840
بنابراین می توانم میوه ها را در اینجا بگویم و اکنون می توانم این طول را به نوعی متغیر ذخیره کنم و سپس چاپ کنم

15
00:00:59,940 --> 00:01:00,210
آن

16
00:01:00,210 --> 00:01:03,360
اما به جای انجام این کار ، من مستقیماً این طول را چاپ می کنم.

17
00:01:03,360 --> 00:01:06,050
بنابراین من این مورد را در یک بیانیه چاپی قرار می دهم.

18
00:01:06,060 --> 00:01:08,850
بنابراین اگر این را ذخیره کنم و اگر این کار را اجرا کنم.

19
00:01:10,440 --> 00:01:13,590
همانطور که می بینید ، می گوید طول شش است.

20
00:01:13,590 --> 00:01:19,050
و این دقیقاً صحیح است ، زیرا اگر به این لیست نگاهی بیندازید ، ما شش عنصر در آن داریم.

21
00:01:19,050 --> 00:01:24,480
بنابراین عملکرد طول به طور خاص مفید است وقتی می خواهید بدانید که لیست شما در واقع چقدر است.

22
00:01:24,510 --> 00:01:30,510
حال بیایید در مورد عملکرد بعدی بحث کنیم ، که تابعی است که به ما امکان می دهد برخی از عناصر را در آن وارد کنیم

23
00:01:30,510 --> 00:01:31,180
یک لیست

24
00:01:31,200 --> 00:01:37,980
بنابراین بیایید بگوییم که شما یک لیست دارید و بیایید بگوییم که می خواهید ورودی را از کاربر بپذیرید و آن را اضافه کنید

25
00:01:37,980 --> 00:01:41,790
به عنوان یک مورد در داخل یکی از لیست هایی که در برنامه خود دارید وارد کنید.

26
00:01:41,790 --> 00:01:46,650
در آن مورد خاص ، تابعی که مفید باشد به عنوان عملکرد درج نامیده می شود.

27
00:01:46,650 --> 00:01:54,030
بنابراین آنچه عملکرد درج انجام می دهد این است که اساساً از شما می پرسد که دقیقاً می خواهید آن را وارد کنید

28
00:01:54,030 --> 00:01:58,530
عنصر خاص و سپس از شما می خواهد عنصری را که می خواهید وارد کنید بیان کنید.

29
00:01:58,530 --> 00:02:05,160
به عنوان مثال ، بیایید بگوییم اگر می خواهم یک عنصر را در ریشه های لیست وارد کنم ، بنابراین می گویم میوه ها

30
00:02:05,160 --> 00:02:11,380
درج نقطه ، و در اینجا من این عملکرد خاص را می نامم و این عملکرد دو پارامتر را می پذیرد.

31
00:02:11,410 --> 00:02:13,660
اولین پارامتر شاخص است.

32
00:02:13,660 --> 00:02:18,670
بنابراین شاخص چیزی نیست جز موقعیتی که می خواهیم آن عنصر خاص را وارد کنیم.

33
00:02:18,670 --> 00:02:24,010
بنابراین بیایید بگوییم که می خواهم آن عنصر خاص را بین اپل و انبه وارد کنم.

34
00:02:24,010 --> 00:02:26,260
بنابراین اپل دارای یک فهرست یک است.

35
00:02:26,260 --> 00:02:30,100
بنابراین همانطور که می خواهم آن عنصر را در اینجا داشته باشم ، باید آن را مشخص کنم.

36
00:02:30,100 --> 00:02:36,430
من می خواهم این عنصر را در index position one اضافه کنم ، و سپس به منظور اضافه کردن پارامتر دیگر به این

37
00:02:36,430 --> 00:02:42,160
عملکرد ، من کاما می دهم و اگر نمی دانید تماس عملکردی یا یک عملکرد چیست ، نگران نباشید

38
00:02:42,160 --> 00:02:43,150
پارامتر

39
00:02:43,150 --> 00:02:45,040
بعداً می خواهیم در مورد آن بحث کنیم.

40
00:02:45,040 --> 00:02:48,430
اما در حال حاضر بیایید درک کنیم که چگونه این درج کار می کند.

41
00:02:48,430 --> 00:02:52,450
بنابراین پس از این باید میوه ای را که می خواهیم اضافه کنیم مشخص کنیم.

42
00:02:52,450 --> 00:02:54,670
بنابراین بیایید بگوییم که می خواهیم آناناس را اضافه کنیم.

43
00:02:54,670 --> 00:03:00,940
بنابراین به عنوان نام میوه یک رشته است ، ما باید در واقع از نقل قول های مضاعف استفاده کنیم تا آن را به یک رشته تبدیل کنیم.

44
00:03:00,940 --> 00:03:02,560
بنابراین آناناس

45
00:03:03,300 --> 00:03:06,180
این کد را ذخیره کنید و اگر این کار را اجرا کردید.

46
00:03:07,690 --> 00:03:09,610
این میوه به اینجا اضافه می شود.

47
00:03:09,610 --> 00:03:14,650
اما در حال حاضر ، همانطور که لیست چاپ نشده است ، شما مطمئن نیستید که میوه در واقع در میوه ها اضافه شده است

48
00:03:14,650 --> 00:03:15,070
لیست

49
00:03:15,070 --> 00:03:17,080
بنابراین من جلو می روم و لیست را در اینجا چاپ می کنم.

50
00:03:17,080 --> 00:03:23,410
بنابراین اگر میوه ها را چاپ کنم و اگر این کد را اجرا کنم ، همانطور که می بینید ، آناناس در این مورد اضافه می شود

51
00:03:23,410 --> 00:03:24,010
موقعیت

52
00:03:24,010 --> 00:03:29,200
و اگر می خواهید آناناس را در موقعیتی متفاوت قرار دهید ، می توانید این کار را نیز انجام دهید.

53
00:03:29,200 --> 00:03:36,790
به عنوان مثال ، اگر من این کار را انجام دهم و اگر این کار را انجام دهم ، می توانم آن را در موقعیت پنجم اضافه کنم.

54
00:03:36,790 --> 00:03:40,360
اکنون ببینید ، آناناس در موقعیت شاخص پنج اضافه می شود.

55
00:03:40,540 --> 00:03:42,820
بنابراین اینگونه است که درج کار می کند.

56
00:03:42,820 --> 00:03:47,530
اکنون ، دقیقاً مانند Insert ، ما نیز عملکردی داریم که به عنوان ضمیمه خوانده می شود.

57
00:03:47,530 --> 00:03:53,380
و آنچه ضمیمه می کند این است که به سادگی عنصری را که می خواهیم ضمیمه کنیم و اساساً آن را اضافه می کند

58
00:03:53,380 --> 00:03:55,150
در انتهای لیست.

59
00:03:55,150 --> 00:03:56,860
بنابراین بیایید این را نیز یاد بگیریم.

60
00:03:56,860 --> 00:04:02,380
بنابراین من می گویم میوه ها ضمیمه می شوند و بیایید بگوییم که من از نام میوه استفاده می کنم.

61
00:04:02,380 --> 00:04:05,860
بنابراین به جای اضافه کردن نام میوه ، یک رشته ساده اضافه می کنم.

62
00:04:05,860 --> 00:04:06,490
سلام

63
00:04:06,490 --> 00:04:11,360
بنابراین این مورد را می گیرد و آن را به لیستی که ما در اینجا داریم اضافه می کند.

64
00:04:11,360 --> 00:04:16,040
بنابراین من این را ذخیره می کنم و سپس اجازه می دهیم لیست واقعی را چاپ کنیم.

65
00:04:16,279 --> 00:04:21,860
و حالا اگر این کار را اجرا کنم ، می توانید ببینید که سلام در واقع در انتهای آن اضافه می شود

66
00:04:21,860 --> 00:04:22,910
لیست اینجا.

67
00:04:22,910 --> 00:04:28,880
حال ، اگر به جای اضافه کردن یک لیست ، چه می شود ، اگر واقعاً سعی کنید لیست دیگری را در اینجا اضافه کنید؟

68
00:04:28,880 --> 00:04:32,420
آیا این موارد لیست به این لیست اضافه می شوند؟

69
00:04:32,420 --> 00:04:34,070
بنابراین بیایید یک مثال بزنیم.

70
00:04:34,070 --> 00:04:39,950
بنابراین در اینجا ، به جای عبور از یک رشته ، من واقعاً جلو می روم و لیستی را در اینجا اضافه می کنم و چگونه می بینم

71
00:04:39,950 --> 00:04:40,700
کار می کند

72
00:04:40,700 --> 00:04:49,550
بنابراین بیایید دو میوه مانند گواوا را بگذرانیم ، کاما بدهید و بیایید یکی دیگر مانند زردآلو را اضافه کنیم.

73
00:04:51,680 --> 00:04:53,570
و من حدس می زنم که گواوا را غلط املایی کرده ام.

74
00:04:54,500 --> 00:04:55,220
گواوا

75
00:04:55,940 --> 00:04:56,780
خوب

76
00:04:56,990 --> 00:04:59,090
و اکنون اگر این کار را اجرا کنم.

77
00:05:01,380 --> 00:05:05,040
اکنون ، همانطور که مشاهده می کنید ، این دو میوه به این لیست اضافه می شوند.

78
00:05:05,040 --> 00:05:11,040
اما اکنون می توانید به جای اضافه کردن موارد از لیست دوم ، آنچه را که اساساً آن را اضافه کنید ، ببینید

79
00:05:11,040 --> 00:05:15,810
آیا این لیست کل این لیست را می گیرد و لیست را به یک مورد تبدیل می کند.

80
00:05:15,810 --> 00:05:18,810
و اکنون یک لیست در داخل ، لیست دیگر داریم.

81
00:05:18,840 --> 00:05:21,480
اکنون ، این در واقع در پایتون معتبر است.

82
00:05:21,480 --> 00:05:24,090
یعنی شما می توانید یک لیست در داخل ، لیست دیگر داشته باشید.

83
00:05:24,120 --> 00:05:26,850
این در واقع به عنوان یک لیست تو در تو خوانده می شود.

84
00:05:26,850 --> 00:05:29,850
و ما می خواهیم بعداً در مورد لیست های تو در تو بحث کنیم.

85
00:05:29,850 --> 00:05:33,240
اما بیایید بگوییم که ما نمی خواهیم آن را به این روش اضافه کنیم.

86
00:05:33,240 --> 00:05:39,060
درعوض ، ما می خواهیم مواردی را که در اینجا داریم ، بگیریم و بعد می خواهیم این موارد را بگیریم و اضافه کنیم

87
00:05:39,060 --> 00:05:44,800
آنها را به عنوان مواردی در این لیست خاص بدون اینکه در واقع جلو بروید و یک لیست کامل را در اینجا اضافه کنید.

88
00:05:44,820 --> 00:05:49,300
بنابراین برای انجام این کار ، ما از عملکرد دیگری استفاده می کنیم که به عنوان گسترش نامیده می شود.

89
00:05:49,320 --> 00:05:53,970
بنابراین اگر می خواهید این کار را به این روش انجام دهید ، پس به جای ضمیمه ، باید از تابعی استفاده کنید که نامیده می شود

90
00:05:53,970 --> 00:05:55,290
به عنوان گسترش

91
00:05:55,320 --> 00:06:03,190
بنابراین چه میزان این است که این لیست را می گیرد و موارد را از آن خارج می کند و فقط اضافه می شود

92
00:06:03,190 --> 00:06:07,390
موارد موجود در اینجا به میوه ها بدون اضافه کردن این لیست به عنوان لیست.

93
00:06:07,540 --> 00:06:16,450
بنابراین اگر این کار را ذخیره کنم و اگر این کار را اجرا کنم ، همانطور که اکنون می بینید ، گواوا و زردآلو در واقع به عنوان لیست اضافه می شوند

94
00:06:16,450 --> 00:06:21,040
موارد موجود در لیست اول ، که ما از عملکرد گسترده استفاده کرده ایم.

95
00:06:21,040 --> 00:06:27,940
بنابراین به یاد داشته باشید که از ضمیمه فقط باید استفاده شود وقتی که واقعاً می خواهید یک مورد یا یک مورد را به آن اضافه کنید

96
00:06:27,940 --> 00:06:29,620
یک لیست داده شده در پایان.

97
00:06:29,620 --> 00:06:35,150
و گسترش هر زمان که بخواهید مواردی را از یک لیست به لیست دیگر اضافه کنید ، استفاده می شود.

98
00:06:35,170 --> 00:06:38,530
بنابراین این تفاوت اساسی بین ضمیمه و گسترش است.

99
00:06:38,860 --> 00:06:45,220
اکنون ، درست همانطور که ما برخی از کارکردها برای اضافه کردن عناصر به یک لیست خاص داریم ، ما نیز کارکردهایی داریم

100
00:06:45,220 --> 00:06:47,640
که به ما امکان می دهد عناصر خاصی را نیز حذف کنیم.

101
00:06:47,650 --> 00:06:52,150
به عنوان مثال ، از این ، بیایید بگوییم که می خواهیم نارنجی را حذف کنیم.

102
00:06:52,150 --> 00:06:58,480
بنابراین در اینجا ما تابعی به نام حذف داریم و این به ما امکان می دهد هر نوع مورد را از لیست حذف کنیم

103
00:06:58,480 --> 00:06:59,340
که ما می خواهیم

104
00:06:59,350 --> 00:07:04,330
بنابراین بیایید بگوییم اگر می خواهم نارنجی را حذف کنم ، من به سادگی یک نارنجی را در اینجا و اکنون منتقل می کنم.

105
00:07:04,330 --> 00:07:10,660
اگر این کد را اجرا کنم ، می توانید ببینید که یک مورد از لیست حذف شده است و آن مورد

106
00:07:10,660 --> 00:07:11,530
نارنجی است

107
00:07:11,530 --> 00:07:17,260
و اگر مواردی را از اینجا عبور دهید ، که در واقع مانند زردآلو وجود ندارد.

108
00:07:18,730 --> 00:07:21,600
اگر سعی کنید این کار را انجام دهید ، خطایی خواهید داشت.

109
00:07:21,610 --> 00:07:24,760
دلیل این امر این است که این مورد در واقع در لیست موجود نیست.

110
00:07:24,790 --> 00:07:29,490
اکنون ، به طور مشابه برای حذف ، ما نیز عملکرد دیگری داریم که به عنوان پاپ نامیده می شود.

111
00:07:29,500 --> 00:07:35,780
و آنچه پاپ انجام می دهد این است که اساساً عنصری را که در انتهای آن وجود دارد ، بیرون می آورد.

112
00:07:35,800 --> 00:07:41,290
به عنوان مثال ، در این حالت ، در پایان ، ما این میوه را به نام انگور داریم.

113
00:07:41,290 --> 00:07:46,790
بنابراین اگر می گوییم میوه ها نقطه پاپ ، شما به سادگی این عملکرد پاپ را بر روی میوه ها می نامید.

114
00:07:46,810 --> 00:07:51,760
شما لازم نیست که هیچ نوع پارامتر را تصویب کنید زیرا به طور پیش فرض آخرین عنصر را که شما دارید ظاهر می شود

115
00:07:51,760 --> 00:07:52,750
در لیست خود داشته باشید

116
00:07:52,750 --> 00:07:55,420
بنابراین اگر این کار را اجرا کنید ، قادر خواهید بود آن را ببینید.

117
00:07:55,450 --> 00:07:59,770
اکنون آخرین میوه ای که اکنون ما از بین رفته ایم.

118
00:07:59,800 --> 00:08:02,740
حال اگر یک بار دیگر این عملکرد پاپ را اجرا کنید ، چه می کنید؟

119
00:08:02,740 --> 00:08:04,060
بیایید ببینیم چه اتفاقی می افتد.

120
00:08:04,060 --> 00:08:10,990
بنابراین اگر من می گویم میوه ها نقطه پاپ ، این را ذخیره کرده و این کد را اجرا کنید ، می توانید اولین پاپ را ببینید

121
00:08:10,990 --> 00:08:16,930
در واقع بیرون آمد ، انگور و پاپ بعدی ، که ما در اینجا داریم که بعد از آن ظاهر شد

122
00:08:16,930 --> 00:08:19,310
میوه ای که در لیست خود داشتیم که هندوانه است.

123
00:08:19,310 --> 00:08:23,100
و از این پس ما فقط با سیب ، انبه ، هلو و نارنجی مانده ایم.

124
00:08:23,120 --> 00:08:25,970
بنابراین اینگونه عملکرد POP کار می کند.

125
00:08:25,970 --> 00:08:32,570
اکنون ، یکی دیگر از کارکردهای مفید که ما برای لیست داریم این است که پیش برویم و از فهرست خاص مطلع شویم

126
00:08:32,570 --> 00:08:34,059
مورد در داخل یک لیست.

127
00:08:34,070 --> 00:08:41,650
بنابراین بیایید بگوییم اگر لیست بزرگی دارید و مطمئن نیستید که این هندوانه چه شاخصی دارد؟

128
00:08:41,659 --> 00:08:45,920
بنابراین در این مورد خاص ، می توانید از تابعی به نام index استفاده کنید.

129
00:08:45,920 --> 00:08:50,750
بنابراین اگر می گویید شاخص نقطه میوه و اگر نام مورد را از اینجا عبور می دهید.

130
00:08:50,750 --> 00:08:55,670
بنابراین در این حالت ، همانطور که می خواهیم دریابیم ، شاخص هندوانه ، می توانستم هندوانه را بگویم.

131
00:08:56,540 --> 00:09:01,650
این در واقع قرار است شاخص این مورد خاص را در لیست به من بازگرداند.

132
00:09:01,670 --> 00:09:08,420
بنابراین برای نمایش این مورد در کنسول خروجی ، من این مورد را در بیانیه چاپ قرار می دهم.

133
00:09:08,420 --> 00:09:11,870
بنابراین من این را از اینجا قطع می کنم ، آن را به اینجا چسبانده ام.

134
00:09:11,900 --> 00:09:19,850
و اگر این کار را اجرا کنم ، همانطور که اکنون می بینید ، می گوید شاخص این مورد چهار است.

135
00:09:20,060 --> 00:09:24,680
حال اگر من با انبه همان کار را انجام دهم ، قرار است به عنوان یکی از من فهرست شود.

136
00:09:24,680 --> 00:09:29,510
بنابراین اگر من این کار را اجرا کنم ، شما می توانید ببینید که ما یکی را به عنوان شاخص داریم.

137
00:09:29,510 --> 00:09:34,670
بنابراین با استفاده از عملکرد شاخص ، می توانید برای هر مورد خاص در لیست خود ، فهرست را دریافت کنید.

138
00:09:34,700 --> 00:09:39,480
حال بیایید در مورد دو کارکرد آخر برای این سخنرانی که حداقل و حداکثر است بحث کنیم.

139
00:09:39,500 --> 00:09:44,000
بنابراین بیایید بگوییم که شما آرایه عددی دارید که مقادیر عددی دارد.

140
00:09:44,000 --> 00:09:47,630
بنابراین بیایید بگوییم که ما مقادیر نمرات داریم.

141
00:09:47,660 --> 00:09:49,370
اینها می توانند هر امتیاز باشند.

142
00:09:49,370 --> 00:09:57,630
بنابراین بیایید برخی از شماره های تصادفی مانند یک ، دو ، سه ، چهار ، پنج ، شش ، بیایید بگوییم 90 و 30.

143
00:09:58,110 --> 00:10:00,990
بنابراین همانطور که می بینید ، لیستی از شماره ها را در اینجا داریم.

144
00:10:00,990 --> 00:10:03,630
به نظر می رسد این اعداد تا این مرحله مرتب شده اند.

145
00:10:03,660 --> 00:10:05,820
با این حال ، در اینجا تعداد بیشتری داریم.

146
00:10:05,850 --> 00:10:07,830
سپس دوباره تعداد کمتری داریم.

147
00:10:07,830 --> 00:10:13,160
و بیایید بگوییم اگر می خواهید حداکثر مقدار را از این نمرات ، که در اختیار دارید پیدا کنید.

148
00:10:13,170 --> 00:10:19,350
بنابراین برای یافتن حداکثر مقادیر خارج از این نمرات ، شما به سادگی از عملکرد حداکثر استفاده می کنید.

149
00:10:19,350 --> 00:10:25,200
بنابراین در اینجا شما به سادگی می گویید حداکثر برای این لیست ، که نمرات است ، پیدا کنید.

150
00:10:25,200 --> 00:10:30,990
بنابراین شما از عملکرد حداکثر استفاده می کنید و به سادگی در لیستی که دارید عبور می کنید و این قرار است

151
00:10:30,990 --> 00:10:36,480
شما نتیجه را به عنوان حداکثر مقادیر یا حداکثر مورد در لیست نمرات.

152
00:10:36,480 --> 00:10:40,980
بنابراین بیایید این مورد را چاپ کنیم تا آن را در کنسول خروجی نمایش دهیم.

153
00:10:40,980 --> 00:10:46,230
و اگر این کار را اجرا کنم ، می توانید ببینید که ما حداکثر 90 را دریافت می کنیم.

154
00:10:46,260 --> 00:10:48,930
دلیل این امر این است که حداکثر تعداد در اینجا است.

155
00:10:48,930 --> 00:10:54,720
حال بیایید بگوییم که ارزش دیگری را اضافه می کنید که بسیار بزرگتر از آن است ، مانند 763.

156
00:10:55,280 --> 00:11:00,260
و اکنون اگر این کار را اجرا کنید ، می توانید ببینید که حداکثر تعداد در اینجا 763 است.

157
00:11:00,290 --> 00:11:06,170
اکنون ، دقیقاً مانند حداکثر ، ما یک عملکرد مشابه نیز داریم که کاملاً برعکس آن است ، که حداقل است.

158
00:11:06,170 --> 00:11:12,050
و همانطور که از نام آن پیداست ، در واقع برای یافتن کوچکترین مقدار در داخل یک لیست استفاده می شود.

159
00:11:12,080 --> 00:11:19,100
بنابراین در اینجا ، اگر حداقل نمرات را محاسبه کنم ، این یکی را به من می دهد زیرا این کوچکترین است

160
00:11:19,100 --> 00:11:20,360
ارزش در این مرحله

161
00:11:20,360 --> 00:11:23,420
بنابراین اینگونه است که عملکرد حداکثر و حداقل کار می کند.

162
00:11:23,540 --> 00:11:29,150
بنابراین اینگونه است که می توانید پیش بروید و از یک مجموعه کامل از توابع لیست استفاده کنید و می خواهید پیدا کنید

163
00:11:29,150 --> 00:11:31,880
استفاده از آن بیشتر هنگام نوشتن برنامه های پیچیده.

164
00:11:31,880 --> 00:11:39,380
و در آن برنامه های پیچیده ، این توابع لیست خاص ، پیشبرد و دستکاری را بسیار آسان می کند

165
00:11:39,380 --> 00:11:41,640
روی آنها لیست و انجام عمل کنید.

166
00:11:41,660 --> 00:11:43,730
بنابراین این برای این سخنرانی است.

167
00:11:43,730 --> 00:11:48,650
و در سخنرانی بعدی ، بیایید چند مفهوم دیگر در مورد لیست هایی که مهم هستند یاد بگیریم.

168
00:11:48,650 --> 00:11:52,520
بنابراین بسیار ممنونم که تماشا می کنید و من شما را در مورد بعدی می بینم.

