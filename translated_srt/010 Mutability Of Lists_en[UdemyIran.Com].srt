1
00:00:00,050 --> 00:00:00,740
در این سخنرانی

2
00:00:00,740 --> 00:00:03,500
بیایید در مورد جهش پذیری لیست ها بیاموزیم.

3
00:00:03,500 --> 00:00:09,320
بنابراین همه ما ساختار داده لیست را می دانیم ، که به ما امکان می دهد مجموعه ای از موارد را در کنار هم ذخیره کنیم.

4
00:00:09,320 --> 00:00:11,810
با این حال ، ما نمی دانیم که لیست ها قابل تغییر هستند.

5
00:00:11,810 --> 00:00:14,930
بنابراین دقیقاً منظور ما از لیست ها قابل تغییر است.

6
00:00:14,930 --> 00:00:19,880
بنابراین قابل تغییر در اصل به این معنی است که می توانیم پیش برویم و محتوای یک لیست معین را اصلاح کنیم.

7
00:00:19,880 --> 00:00:23,960
بنابراین بیایید مثالی را درک کنیم تا تغییرپذیری لیست را درک کنیم.

8
00:00:23,960 --> 00:00:26,090
بنابراین بیایید یک لیست ساده در اینجا ایجاد کنیم.

9
00:00:26,090 --> 00:00:31,340
بنابراین می گویم A لیستی با این سه عنصر مانند شماره های یک ، دو ، سه است.

10
00:00:31,370 --> 00:00:37,580
حال بیایید بگوییم اگر این لیست را چاپ کنم ، می توانم موارد را در داخل لیست دریافت کنم ، که یکی است ،

11
00:00:37,580 --> 00:00:38,000
دو ، سه.

12
00:00:38,000 --> 00:00:42,230
و به این دلیل است که ما این موارد را در موقعیت های شاخص ذخیره کرده ایم.

13
00:00:42,230 --> 00:00:48,860
با این حال ، حالا بیایید بگوییم که می خواهم این لیست را اصلاح کنم و به جای دو نفر ، در واقع می خواهم چیزی را قرار دهم

14
00:00:48,860 --> 00:00:49,400
دیگری

15
00:00:49,400 --> 00:00:55,460
بنابراین بیایید به جای این عناصر دو در اینجا بگوییم ، می خواهم یک عنصر دیگر مانند 100 را قرار دهم.

16
00:00:55,460 --> 00:01:02,310
بنابراین برای انجام این کار ، می توانم یک یکی از آنها را بگویم ، که به معنای موقعیت اول فهرست است ، بیایید بگوییم

17
00:01:02,310 --> 00:01:04,440
من یک عنصر جدید مثل 100 می خواهم.

18
00:01:04,470 --> 00:01:07,590
حالا اگر این کار را انجام دهم ، شما قادر به دیدن آن خواهید بود.

19
00:01:07,590 --> 00:01:13,680
حالا وقتی لیست را در اینجا چاپ می کنم ، دو نفر با 100 جایگزین می شوند و به این دلیل است که ما سعی کرده ایم اصلاح کنیم

20
00:01:13,680 --> 00:01:17,670
محتوای آن موقعیت شاخص خاص تا 100.

21
00:01:17,670 --> 00:01:21,690
و این همان چیزی است که دقیقاً به عنوان جهش پذیری نامیده می شود.

22
00:01:21,690 --> 00:01:27,210
و به همین دلیل است که لیست ها قابل تغییر هستند ، زیرا ما در واقع قادر به جهش ارزش A هستیم

23
00:01:27,210 --> 00:01:29,220
مورد خاص در داخل یک لیست.

24
00:01:29,250 --> 00:01:33,210
نه فقط این که ما می توانیم چندین مورد را در داخل یک لیست جهش دهیم.

25
00:01:33,210 --> 00:01:38,460
بنابراین بیایید بگوییم که من همچنین می خواهم یک دو را به آن تغییر دهم ، بیایید بگوییم 300.

26
00:01:38,760 --> 00:01:40,050
من هم می توانم این کار را انجام دهم.

27
00:01:40,050 --> 00:01:45,270
و این بار ، همانطور که مشاهده می کنید ، مقدار این موقعیت شاخص خاص در داخل یک لیست تغییر کرده است.

28
00:01:45,300 --> 00:01:51,060
حال ، بیایید بگوییم اگر این لیست را دارید و بیایید بگوییم که آیا می خواهید همه موارد را در اینجا تغییر دهید.

29
00:01:51,060 --> 00:01:56,430
بنابراین کاری که شما می توانید انجام دهید این است که می توانید یک خاموش بگویید و در واقع می توانید در اینجا برش را انجام دهید و می توانستید

30
00:01:56,430 --> 00:01:59,580
مشخص کنید که A از 0 تا 4.

31
00:01:59,610 --> 00:02:04,350
این بدان معناست که تمام عناصری را که در اینجا از 0 تا 4 داریم ، بگیرید.

32
00:02:04,350 --> 00:02:09,240
و این اساساً به معنای شماره فهرست صفر تا فهرست شماره سه است ، که در اینجا درست است.

33
00:02:09,240 --> 00:02:13,320
و بیایید بگوییم که می خواهیم همه آن موارد را در اینجا به چیز دیگری تغییر دهیم.

34
00:02:13,320 --> 00:02:17,550
بنابراین در اینجا من آن موارد را مانند ده ، 20 و 30 مشخص می کنم.

35
00:02:17,640 --> 00:02:23,490
بنابراین اکنون آنچه اتفاق می افتد مواردی است که ما در لیست داریم ، مانند یک ، دو و سه ، آنها اکنون هستند

36
00:02:23,490 --> 00:02:27,330
در اینجا مانند ده ، 20 و 30 با این موارد جایگزین می شود.

37
00:02:27,330 --> 00:02:32,820
بنابراین اگر من این کار را اجرا کنم ، همانطور که اکنون می بینید ، همه اینها در اینجا اصلاح شدند.

38
00:02:32,820 --> 00:02:37,320
بنابراین اینگونه است که می توانید پیش بروید و یک لیست کامل مانند آن را جهش دهید.

39
00:02:37,620 --> 00:02:40,860
حال ، چرا دقیقاً جهش پذیری بسیار مهم است؟

40
00:02:40,860 --> 00:02:47,160
بنابراین بیایید بگوییم وقتی روی یک برنامه بزرگتر کار می کنید و می خواهید نوعی از داده ها را ذخیره کنید

41
00:02:47,160 --> 00:02:52,170
تغییرات در طول چرخه زندگی برنامه ، در آن مورد خاص ، شما می خواهید از یک داده استفاده کنید

42
00:02:52,170 --> 00:02:57,570
ساختار مانند لیست که در واقع امکان تغییرپذیری را فراهم می کند و در واقع قابل تغییر است.

43
00:02:57,570 --> 00:03:01,850
این بدان معناست که می توانید بعداً پیش بروید و محتوای آن لیست خاص را تغییر دهید.

44
00:03:01,850 --> 00:03:08,240
به عنوان مثال ، بیایید بگوییم اگر در حال ساخت یک وب سایت تجارت الکترونیکی هستید و اگر می خواهید یک خرید طراحی کنید

45
00:03:08,240 --> 00:03:11,720
سبد خرید ، بنابراین در واقع بهتر است از لیستی برای این منظور استفاده کنید.

46
00:03:11,720 --> 00:03:17,780
و این به این دلیل است که کاربران می توانند مواردی را به سبد خرید اضافه کنند ، موارد را از سبد خرید ، به همین ترتیب و

47
00:03:17,780 --> 00:03:18,410
خیلی دیگر

48
00:03:18,410 --> 00:03:22,490
و از این پس در واقع توصیه می شود از یک ساختار داده مانند لیست استفاده کنید.

49
00:03:22,760 --> 00:03:28,730
اکنون ، مشابه لیست ، ما همچنین ساختار داده دیگری به نام Tuple یا Tuples داریم که ما هستیم

50
00:03:28,730 --> 00:03:30,800
در سخنرانی بعدی به بحث و گفتگو می رود.

51
00:03:30,830 --> 00:03:34,640
اکنون یک مورد در مورد یک Tuple این است که یک Tuple تغییر ناپذیر است.

52
00:03:34,640 --> 00:03:40,430
این بدان معناست که اگر جلو بروید و مقدار یک Tuple را تعیین کنید ، بعداً این مقادیر قابل تغییر نیست.

53
00:03:40,430 --> 00:03:45,800
بنابراین این یک نوع ساختار داده سفت و سخت تر است ، اما برنامه های خاص خود را نیز دارد.

54
00:03:45,800 --> 00:03:49,760
بنابراین در سخنرانی بعدی ، بیایید پیش برویم و بیایید در مورد Tuples بیاموزیم.

