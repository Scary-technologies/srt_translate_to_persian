1
00:00:00,170 --> 00:00:05,060
بنابراین در این سخنرانی ، بیایید یک مقدمه مختصر با زبان برنامه نویسی پایتون داشته باشیم.

2
00:00:05,270 --> 00:00:08,930
بنابراین این تعریف رسمی از زبان برنامه نویسی پایتون است.

3
00:00:08,930 --> 00:00:12,860
بنابراین پایتون یک زبان برنامه نویسی با هدف عمومی سطح بالا است.

4
00:00:12,860 --> 00:00:20,630
طراحی آن بر خوانایی کد با استفاده از تورفتگی قابل توجه تأکید دارد و پایتون به صورت پویا است

5
00:00:20,630 --> 00:00:22,520
تایپ شده و زباله جمع آوری شده است.

6
00:00:22,520 --> 00:00:26,810
بنابراین اگر در حال یادگیری پایتون هستید ، ممکن است با این تعریف بسیار زیاد باشد.

7
00:00:26,810 --> 00:00:30,890
اما بسیاری از اوقات مردم در واقع نمی دانند این کلمات به چه معناست.

8
00:00:30,980 --> 00:00:38,090
و اغلب اوقات این سؤالات معمولاً در مصاحبه های برنامه نویسی مانند چرا پایتون به صورت پویا پرسیده می شود

9
00:00:38,090 --> 00:00:44,990
زبان تایپ شده ، چگونه مجموعه زباله های پایتون کار می کند یا دقیقاً چگونه پایتون یک زبان سطح بالا است ،

10
00:00:44,990 --> 00:00:46,090
بنابراین و غیره.

11
00:00:46,100 --> 00:00:52,520
بنابراین برای اینکه اساساً از همه این مفاهیم پاک شویم ، بیایید خط بیان را به صورت خط رمزگشایی کنیم و

12
00:00:52,520 --> 00:00:54,890
بیایید سعی کنیم معنای هر کلمه را درک کنیم.

13
00:00:54,890 --> 00:01:01,170
بنابراین بیایید ابتدا جلو برویم و بفهمیم که چرا پایتون یک زبان برنامه نویسی سطح بالا است؟

14
00:01:01,290 --> 00:01:06,450
بنابراین حتی قبل از یادگیری آن ، شما اساساً باید تفاوت بین دقیقاً چیست

15
00:01:06,450 --> 00:01:09,420
یک سطح بالا و یک زبان برنامه نویسی سطح پایین.

16
00:01:09,420 --> 00:01:15,690
و برای درک این موضوع ، باید هنگام شروع برنامه نویسی ، به عقب برگردیم.

17
00:01:15,930 --> 00:01:22,170
بنابراین همه ما می دانیم که برنامه نویسی چیزی نیست ، اما اساساً دستورالعمل به رایانه است.

18
00:01:22,290 --> 00:01:28,380
اکنون ، هر وقت می خواهید به کسی دستورالعمل دهید ، کاری که ما انجام می دهیم این است که ما اساساً از یک زبان استفاده می کنیم

19
00:01:28,380 --> 00:01:35,130
که اکنون آنها را درک می کنند تا بتوانند به یک کامپیوتر یا اساساً آموزش CPU را آموزش دهند

20
00:01:35,130 --> 00:01:35,610
برای انجام

21
00:01:35,640 --> 00:01:41,160
ما باید به یک زبان صحبت کنیم یا باید از زبانی استفاده کنیم که کامپیوتر در واقع آن را درک می کند.

22
00:01:41,190 --> 00:01:47,940
اکنون ، رایانه فقط کدهای باینری یا ماشین را درک می کند ، که چیزی جز صفر و دستگاه ها نیست.

23
00:01:47,940 --> 00:01:51,960
بنابراین در نهایت این همان چیزی است که کد باینری به نظر می رسد.

24
00:01:51,960 --> 00:01:59,040
اما شما می توانید توجه داشته باشید که همه این صفرها و آنهایی که در واقع برای انسان قابل درک نیستند.

25
00:01:59,040 --> 00:02:02,850
بنابراین ما نمی دانیم که این کد باینری در واقع به چه معناست.

26
00:02:02,850 --> 00:02:08,370
اما اگر به هر زبان برنامه نویسی نگاهی بیندازید ، بنابراین اگر به این کد نگاه کنید

27
00:02:08,370 --> 00:02:14,400
در اینجا ، شما به وضوح می توانید ببینید که این یک برنامه اساسی است که در آن ما یک ارزش ده را می گیریم ، صرفه جویی می کنید

28
00:02:14,400 --> 00:02:18,900
آن را به یک متغیر ، دو به آن اضافه کنید ، و سپس آن مقدار خاص را چاپ کنید.

29
00:02:19,320 --> 00:02:25,170
با این حال ، مشکل این است که CPU ها این زبان برنامه نویسی را درک نمی کنند ، و از این پس این

30
00:02:25,170 --> 00:02:30,900
زبان برنامه نویسی باید به کد دستگاه یا کد باینری ترجمه شود ، و سپس باید تغذیه شود

31
00:02:30,900 --> 00:02:31,950
به CPU.

32
00:02:31,950 --> 00:02:38,160
اما در روزهای اولیه ما زبانهایی مانند C ، C Plus Plus و Java و برنامه نویسان نداشتیم

33
00:02:38,160 --> 00:02:44,610
در واقع برای ارائه دستورالعمل به CPU ، باید به نوشتن کد باینری یا کد دستگاه تکیه کند.

34
00:02:44,610 --> 00:02:50,580
و این در واقع کاملاً خسته کننده بود زیرا نوشتن برنامه با استفاده از کد ماشین بسیار دشوار است

35
00:02:50,580 --> 00:02:56,370
برای برنامه نویسان زیرا به جای تمرکز روی منطق ، همه برنامه نویسان باید این کار را انجام دهند

36
00:02:56,370 --> 00:02:58,830
دقیقاً چگونه می توان دستورالعمل ها را ارائه داد.

37
00:02:59,160 --> 00:03:05,460
اکنون ، برای حل این مشکل استفاده از صفرها و موارد برای کدگذاری ، برنامه نویسان این است که

38
00:03:05,460 --> 00:03:11,910
آنها قبلاً کد ماشین را با فرمت خواندنی تر مانند اعشاری ، اکتال یا شش ضلعی می نوشتند.

39
00:03:12,090 --> 00:03:15,750
بنابراین در اینجا نمونه ای از کد شش ضلعی به نظر می رسد.

40
00:03:15,750 --> 00:03:22,890
بنابراین به جای استفاده از صفرها و موارد ، ما در اینجا از شش ضلعی استفاده می کنیم تا دستورالعمل CPU را ارائه دهیم.

41
00:03:23,190 --> 00:03:29,010
اکنون این قالب هنوز کاملاً گیج کننده است و نوشتن کد برنامه نویسی با استفاده از این کار هنوز دشوار است

42
00:03:29,010 --> 00:03:32,250
اما هنوز هم در واقع بهتر از استفاده از صفرها و موارد است.

43
00:03:32,370 --> 00:03:39,510
اکنون ، از آنجا که این کد شش ضلعی هنوز هم استفاده از آن دشوار بود ، ما یک سطح انتزاع را ارائه داده بودیم

44
00:03:39,510 --> 00:03:43,320
در بالای کد دستگاه و زبان مونتاژ معرفی شد.

45
00:03:43,350 --> 00:03:50,670
اکنون زبان مونتاژ بسیار قابل خواندن بود و در مقایسه با ماشین نویسندگی بسیار قابل استفاده تر بود

46
00:03:50,670 --> 00:03:51,210
کد

47
00:03:51,300 --> 00:03:55,170
بنابراین همانطور که می بینید ، این همان چیزی است که اکنون کد مونتاژ به نظر می رسد.

48
00:03:55,170 --> 00:03:59,910
زبان مونتاژ برای کاهش دشواری نوشتن ، کد دستگاه و مونتاژ معرفی شد.

49
00:03:59,910 --> 00:04:04,710
زبان یک سطح انتزاع را در بالای کد دستگاه فراهم کرده است ، و این همان چیزی است که به نظر می رسد.

50
00:04:05,190 --> 00:04:10,800
بنابراین شما به وضوح می توانید ببینید که حداقل ما قادر خواهیم بود این کد را بخوانیم و بفهمیم چه چیزی

51
00:04:10,800 --> 00:04:12,900
دقیقاً هر خط کد در حال انجام است.

52
00:04:12,900 --> 00:04:20,220
بنابراین در اینجا ما جمله هایی مانند Move داریم ، ما جمله هایی مانند Sub ، اضافه کردن ، پرش ، غیره و غیره داریم.

53
00:04:20,550 --> 00:04:24,510
بنابراین این کد در مقایسه با کد دستگاه هنوز قابل خواندن است.

54
00:04:24,510 --> 00:04:30,450
و برنامه نویسان در واقع نوشتن این کد را در مقایسه با برنامه نویسی مستقیم با استفاده از دستگاه ، بسیار بهتر پیدا کردند

55
00:04:30,450 --> 00:04:36,840
کد به زبان مونتاژ ، برنامه نویسان مجبور بودند مستقیماً با ویژگی های سخت افزاری پردازنده کار کنند

56
00:04:36,870 --> 00:04:38,850
این ثبت های آن است.

57
00:04:38,850 --> 00:04:44,910
بنابراین همانطور که می بینید ، این خط خاص از کد اساساً به این معنی است که ما باید یک مقدار خاص را جابجا کنیم

58
00:04:44,910 --> 00:04:46,350
به ثبت CPU.

59
00:04:46,350 --> 00:04:52,410
بنابراین زبان مونتاژ اساساً بدان معنی است که ما باید مستقیماً با سخت افزار رایانه مقابله کنیم.

60
00:04:52,410 --> 00:04:57,420
و این در واقع به این معنی بود که اگر شما در حال نوشتن برنامه ای برای سخت افزار متفاوت هستید ، باید اجرا کنید

61
00:04:57,420 --> 00:04:59,700
یا شما باید از مجموعه ای متفاوت از دستورالعمل استفاده کنید.

62
00:05:00,380 --> 00:05:02,570
اکنون این زبان مونتاژ ، که ما داشتیم.

63
00:05:02,600 --> 00:05:08,270
استفاده از آن هنوز دشوار بود و در آن زمان هیچ زبان قابل خواندن انسانی وجود نداشت.

64
00:05:08,270 --> 00:05:14,480
و از این پس یک لایه انتزاعی دیگری در بالای این زبان مونتاژ و قابل خواندن تر اضافه شد

65
00:05:14,480 --> 00:05:17,450
زبانی مانند زبان برنامه نویسی C معرفی شد.

66
00:05:17,450 --> 00:05:20,420
بنابراین این همان چیزی است که زبان برنامه نویسی C به نظر می رسد.

67
00:05:20,600 --> 00:05:26,320
همانطور که می بینید ، در واقع بسیار قابل درک تر است ، بسیار قابل خواندن انسانی است.

68
00:05:26,330 --> 00:05:31,790
اگر فقط به جای استفاده از حروف تصادفی مانند این ، به نحو نگاهی بیندازید.

69
00:05:31,820 --> 00:05:35,480
C زبان برنامه نویسی از کلمات و شخصیت های معمولی استفاده می کند.

70
00:05:35,960 --> 00:05:42,440
همچنین ، در حالی که از C استفاده می شود ، برنامه نویسان مجبور نیستند مستقیماً با سخت افزار CPU یا رجیسترها مقابله کنند.

71
00:05:42,440 --> 00:05:48,230
بنابراین این یک مزیت اضافی بود و در مقایسه با زبان مونتاژ ، کاربر پسند تر بود.

72
00:05:48,230 --> 00:05:51,950
و این در واقع تولید برنامه نویسان را با مقدار زیادی بهبود بخشید.

73
00:05:51,980 --> 00:05:57,950
اکنون ما سه زبان مختلف را درک کرده ایم ، مانند زبان مونتاژ زبان و زبان

74
00:05:57,950 --> 00:05:59,360
C زبان برنامه نویسی.

75
00:05:59,360 --> 00:06:03,270
اما اکنون زبان برنامه نویسی سطح بالا و پایین دقیقاً چیست؟

76
00:06:03,270 --> 00:06:09,150
بنابراین برای درک این مفهوم ، بیایید پیش برویم و بیایید نگاهی به این اسلاید خاص بیندازیم.

77
00:06:09,420 --> 00:06:14,730
بنابراین در سمت چپ ، انسان داریم و در سمت راست ما رایانه داریم.

78
00:06:14,910 --> 00:06:17,810
اکنون ، رایانه ها فقط کد دستگاه را درک می کنند.

79
00:06:17,820 --> 00:06:20,130
از این پس ، من کد دستگاه را در اینجا قرار داده ام.

80
00:06:20,990 --> 00:06:26,840
انسانهای عادی کد دستگاه را درک نمی کنند ، اما آنها درک می کنند و در واقع قادر هستند

81
00:06:26,840 --> 00:06:29,800
برای خواندن زبانهایی مانند زبان برنامه نویسی C.

82
00:06:29,810 --> 00:06:35,150
و در اینجا در وسط ما زبان مونتاژ داریم که آنقدر دوستانه انسان نیست ، اما رایانه نیست

83
00:06:35,150 --> 00:06:36,170
دوستانه یا دوستانه

84
00:06:36,560 --> 00:06:42,230
بنابراین تمام زبانهایی که برای رایانه قابل درک تر هستند به عنوان برنامه نویسی سطح پایین خوانده می شوند

85
00:06:42,230 --> 00:06:48,410
زبانها و تمام زبانهای برنامه نویسی ، که کمی قابل خواندن انسانی هستند ، خوانده می شوند

86
00:06:48,410 --> 00:06:51,280
به عنوان زبانهای برنامه نویسی سطح بالا یا سطح متوسط.

87
00:06:51,290 --> 00:06:57,050
بنابراین به معنای اساسی ، یک زبان برنامه نویسی که بیشتر به انسان نزدیک است ، که قابل درک تر است

88
00:06:57,050 --> 00:07:02,750
به انسان ، به عنوان یک زبان سطح بالا و یک زبان برنامه نویسی خوانده می شود که قابل درک تر است

89
00:07:02,750 --> 00:07:05,990
برای رایانه به عنوان یک زبان برنامه نویسی سطح پایین خوانده می شود.

90
00:07:05,990 --> 00:07:11,720
و همچنین باید درک کنید که حتی اگر این کد را در C می نویسید ، در نهایت قبل از پردازش

91
00:07:11,720 --> 00:07:16,260
این کد توسط رایانه ، این کد در نهایت به کد دستگاه ترجمه می شود.

92
00:07:16,280 --> 00:07:21,720
من امیدوارم که این در واقع ایده ای در مورد آنچه که دقیقاً یک زبان برنامه نویسی سطح بالا و یک است به شما ارائه دهد

93
00:07:21,720 --> 00:07:23,370
زبان برنامه نویسی سطح پایین.

94
00:07:23,580 --> 00:07:25,350
اما پایتون چطور؟

95
00:07:25,380 --> 00:07:31,050
اگر C به عنوان یک زبان برنامه نویسی در سطح متوسط ​​خوانده شود ، چرا تماس پایتون به عنوان یک برنامه نویسی سطح بالا است

96
00:07:31,050 --> 00:07:31,620
زبان؟

97
00:07:31,620 --> 00:07:34,320
بنابراین بیایید مثالی را درک کنیم تا این موضوع را درک کنیم.

98
00:07:34,410 --> 00:07:39,360
بیایید بگوییم که شما باید برنامه ای بنویسید که Hello World را روی صفحه خروجی چاپ می کند.

99
00:07:39,360 --> 00:07:44,280
اگر مجبور بودید این برنامه خاص را بنویسید و ببینید این تمام کدی است که باید بنویسید.

100
00:07:44,280 --> 00:07:50,460
بنابراین یک کد کامل در اینجا وجود دارد که هنوز هم قابل خواندن انسان است ، اما ممکن است کمی دشوار باشد

101
00:07:50,460 --> 00:07:51,930
برای درک مبتدیان

102
00:07:51,930 --> 00:07:58,020
بنابراین اگر به کد C نگاهی بیندازید که ما در اینجا قرار داریم ، ما یک اصلی داریم ، ما پرانتز داریم.

103
00:07:58,020 --> 00:08:01,980
براکت فرفری باز ، براکت فرفری بسته ، به همین ترتیب و غیره.

104
00:08:02,100 --> 00:08:07,260
و سپس ما یک جمله چاپی داریم که قابل درک است که باید چیزی را چاپ کنیم.

105
00:08:07,260 --> 00:08:12,840
با این حال ، ما این صفر نوشتار را نیز در اینجا داریم ، که برای یک مبتدی معنی ندارد.

106
00:08:13,050 --> 00:08:20,190
با این حال ، اگر به همان کد پایتون نگاهی بیندازید ، پایتون در واقع این کار را به صورت یک انجام می دهد

107
00:08:20,190 --> 00:08:22,650
یک خط برای چاپ هر چیزی در صفحه خروجی.

108
00:08:22,650 --> 00:08:26,580
ما فقط باید بگوییم چاپ و سپس جمله ای را که می خواهیم چاپ کنیم تایپ کنیم.

109
00:08:27,030 --> 00:08:33,600
بنابراین پایتون به عنوان یک زبان برنامه نویسی سطح بالا خوانده می شود زیرا برای انسان ها کاملاً آسان است

110
00:08:33,600 --> 00:08:39,539
کد پایتون را بخوانید و درک کنید و یکی از کاربر پسند ترین زبان هایی است که می توان از آن استفاده کرد.

111
00:08:39,539 --> 00:08:43,679
و از این پس می بینیم که پایتون یک زبان برنامه نویسی سطح بالا است.

112
00:08:44,039 --> 00:08:49,980
اکنون ، حتی C به عنوان یک زبان برنامه نویسی سطح بالا خوانده می شود ، اما گاهی اوقات افراد نیز به C مراجعه می کنند

113
00:08:49,980 --> 00:08:51,840
یک زبان برنامه نویسی سطح متوسط.

114
00:08:51,840 --> 00:08:57,960
و این به این دلیل است که C در واقع می تواند قدرت یک سخت افزار را نیز همراه با خواندن باشد.

115
00:08:57,960 --> 00:09:01,320
و از این پس اغلب به عنوان یک زبان برنامه نویسی سطح متوسط ​​خوانده می شود.

116
00:09:01,320 --> 00:09:07,230
بنابراین اکنون یک بار درک کردیم که چرا پایتون به عنوان یک زبان برنامه نویسی سطح بالا ، در سخنرانی بعدی ، نامیده می شود

117
00:09:07,230 --> 00:09:11,880
بیایید یاد بگیریم که چرا پایتون به عنوان یک زبان برنامه نویسی هدف کلی خوانده می شود.

118
00:09:11,880 --> 00:09:14,220
بنابراین بیایید این کار را در مورد بعدی ادامه دهیم.

