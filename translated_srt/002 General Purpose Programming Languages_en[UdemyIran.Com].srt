1
00:00:00,170 --> 00:00:05,960
بنابراین تعریف رسمی پایتون همچنین بیان می کند که پایتون یک زبان برنامه نویسی هدف کلی است.

2
00:00:05,960 --> 00:00:08,590
بنابراین بیایید درک کنیم که چرا دقیقاً چنین است.

3
00:00:08,600 --> 00:00:13,070
بنابراین ابتدا درک کنیم که یک زبان برنامه نویسی هدف کلی دقیقاً چیست.

4
00:00:13,070 --> 00:00:18,140
بنابراین یک زبان برنامه نویسی که برای ساخت نرم افزار در طیف گسترده ای از حوزه های کاربردی استفاده می شود

5
00:00:18,140 --> 00:00:21,620
به عنوان یک زبان برنامه نویسی هدف کلی یا GPL خوانده می شود.

6
00:00:21,980 --> 00:00:27,920
پایتون یک زبان برنامه نویسی با هدف کلی است زیرا می تواند برای نوشتن نرم افزار دسک تاپ استفاده شود ،

7
00:00:27,950 --> 00:00:30,350
این می تواند برای ایجاد برنامه های وب استفاده شود.

8
00:00:30,350 --> 00:00:33,260
همچنین می تواند در علوم داده و یادگیری ماشین نیز استفاده شود.

9
00:00:33,260 --> 00:00:38,990
بنابراین اگر پایتون را با پایتون در نظر می گیرید ، اساساً می توانید اسکریپت های اتوماسیون را بنویسید ، همچنین می توانید

10
00:00:38,990 --> 00:00:40,340
نرم افزار دسک تاپ ایجاد کنید.

11
00:00:40,340 --> 00:00:45,710
بنابراین یک کتابخانه به نام tkinter وجود دارد که اگر مجبورید یک نرم افزار برای خود ایجاد کنید می توانید از آن استفاده کنید

12
00:00:45,710 --> 00:00:47,180
رایانه یا دسک تاپ.

13
00:00:47,360 --> 00:00:52,820
و همچنین چارچوبی مانند Flask و Django دارید که به شما امکان می دهد برنامه های وب را نیز ایجاد کنید.

14
00:00:52,820 --> 00:00:58,910
و پایتون همچنین دارای کتابخانه های بسیار خوبی مانند Numpy و Pandas است که می تواند برای داده ها استفاده شود

15
00:00:58,910 --> 00:01:00,810
پروژه های علمی نیز.

16
00:01:00,960 --> 00:01:06,540
بنابراین اگر نگاهی به پایتون بیندازید ، در کل ، کارهای زیادی وجود دارد که می توانید با پایتون انجام دهید

17
00:01:06,540 --> 00:01:12,270
و از این پس به عنوان یک زبان برنامه نویسی هدف کلی در حال حاضر بر خلاف هدف کلی نامیده می شود

18
00:01:12,270 --> 00:01:13,380
زبان برنامه نویسی.

19
00:01:13,380 --> 00:01:18,870
از طرف دیگر ، ما چیزی داریم که به عنوان یک زبان برنامه نویسی خاص دامنه خوانده می شود.

20
00:01:19,020 --> 00:01:23,550
بنابراین بهترین نمونه از یک زبان خاص دامنه SQL است.

21
00:01:23,550 --> 00:01:29,100
بنابراین اگر به یک زبان برنامه نویسی مانند SQL نگاهی بیندازید ، SQL فقط با پایگاه داده می تواند مورد استفاده قرار گیرد.

22
00:01:29,100 --> 00:01:34,830
یعنی اگر مجبور شوید پیش بروید و از یک پایگاه داده رابطه ای پرس و جو کنید ، SQL فقط برای آن می تواند استفاده شود.

23
00:01:34,860 --> 00:01:38,340
شما نمی توانید پیش بروید و برنامه های دسک تاپ را با SQL ایجاد کنید.

24
00:01:38,340 --> 00:01:41,040
شما نمی توانید برنامه های وب را با آنها ایجاد کنید.

25
00:01:41,070 --> 00:01:47,100
SQL فقط به پایگاه داده و پایگاه داده محدود است ، و این نیز در واقع محدود به رابطه است

26
00:01:47,100 --> 00:01:48,060
بانکهای اطلاعاتی

27
00:01:48,060 --> 00:01:54,600
و از این پس ، زبانهایی مانند SQL به عنوان زبان خاص دامنه خوانده می شوند زیرا می توان از آنها استفاده کرد

28
00:01:54,600 --> 00:01:56,430
فقط در یک دامنه واحد.

29
00:01:56,430 --> 00:02:03,150
با این حال ، یک زبان برنامه نویسی مانند پایتون می تواند در چندین حوزه مانند علوم داده ، ماشین استفاده شود

30
00:02:03,150 --> 00:02:08,150
یادگیری ، توسعه وب ، برنامه های دسک تاپ ، اسکریپت ، هک کردن ، غیره و غیره.

31
00:02:08,160 --> 00:02:09,930
حالا بیایید به قسمت بعدی برویم.

32
00:02:10,199 --> 00:02:14,790
بنابراین آنها می گویند که پایتون بر خوانایی کد تأکید دارد.

33
00:02:14,790 --> 00:02:21,540
بنابراین اگر به پایتون نگاهی بیندازید ، پایتون اهمیت ویژه ای به خوانایی کد و خوانایی کد می دهد

34
00:02:21,540 --> 00:02:26,190
اساساً به این معنی است که خواندن و درک کد برای انسان چقدر آسان است.

35
00:02:26,190 --> 00:02:31,350
اکنون می توانید ببینید که پایتون یکی از ساده ترین زبانهای برنامه نویسی شما خواهد بود

36
00:02:31,380 --> 00:02:37,560
قادر به یافتن همیشه است زیرا نحو آن به حدی ساده است که هیچ زبان برنامه نویسی دیگری حتی نزدیک نمی شود.

37
00:02:37,560 --> 00:02:43,440
و خوانایی کد مهم است زیرا اگر کد قابل خواندن باشد ، افراد بیشتری قادر به استفاده خواهند بود

38
00:02:43,440 --> 00:02:43,620
آن

39
00:02:43,620 --> 00:02:47,250
و این همان چیزی است که پایتون را محبوب می کند زیرا استفاده از آن آسان است.

40
00:02:47,280 --> 00:02:49,080
بسیاری از مردم در واقع از پایتون استفاده می کنند.

41
00:02:49,080 --> 00:02:54,420
و یکی دیگر از دلایل مهم بودن خواندن کد به این دلیل است که به عنوان یک برنامه نویس ، وقتی در کار خود کار می کنید

42
00:02:54,420 --> 00:03:00,210
شغل ، شما بیشتر وقت را صرف خواندن ، تلاش برای درک ، استفاده مجدد و اصلاح خواهید کرد

43
00:03:00,210 --> 00:03:03,330
کد موجود بر خلاف نوشتن کد جدید.

44
00:03:03,330 --> 00:03:08,100
و اگر به شما یک پایه کد داده شود که به زبان مونتاژ نوشته شده باشد ، آن را بسیار پیدا خواهید کرد

45
00:03:08,100 --> 00:03:10,140
برخورد با آن پایه کد دشوار است.

46
00:03:10,140 --> 00:03:15,900
با این حال ، اگر یک پایه کد را پیدا کنید که در پایتون نوشته شده باشد ، به راحتی می توانید درک کنید

47
00:03:15,900 --> 00:03:17,640
آنچه مجموعه خاصی از کد انجام می دهد.

48
00:03:17,640 --> 00:03:21,630
شما به راحتی می توانید از آن استفاده مجدد کنید ، آن را اصلاح کنید ، به همین ترتیب و غیره.

49
00:03:21,630 --> 00:03:27,810
و به همین دلیل خوانایی کد مهم است و به همین دلیل دقیقاً پایتون بر خوانایی کد تأکید می کند.

50
00:03:27,840 --> 00:03:29,550
بیایید به قسمت بعدی حرکت کنیم.

51
00:03:29,760 --> 00:03:32,610
پایتون از تورفتگی قابل توجهی استفاده می کند.

52
00:03:32,610 --> 00:03:36,050
بنابراین دوباره ، بیایید ابتدا بفهمیم تورفتگی چیست.

53
00:03:36,060 --> 00:03:42,120
تورفتگی اساساً به معنای داشتن فضا در ابتدای یک خط کد است و این چیزی است که غیر

54
00:03:42,120 --> 00:03:44,490
به نظر می رسد که در مقابل کد مخرب قرار دارد.

55
00:03:44,490 --> 00:03:46,170
بنابراین در اینجا ما کد C داریم.

56
00:03:46,170 --> 00:03:49,410
سمت چپ غیرقانونی است و این یکی از آنها غرق شده است.

57
00:03:49,410 --> 00:03:54,780
بنابراین شما می توانید ببینید که بعد از براکت های مجعد ما یک خط کد داریم و بعد دیگری نیز داریم

58
00:03:54,780 --> 00:04:00,360
خط کد و شما می توانید ببینید که در واقع هیچ فضایی قبل از این بیانیه های خاص وجود ندارد.

59
00:04:00,360 --> 00:04:06,060
اما به طور معمول توصیه می شود که هر زمان که یک بلوک کد جدید بنویسید ، همیشه فضای کمی دارید

60
00:04:06,060 --> 00:04:06,330
اینجا

61
00:04:06,330 --> 00:04:10,800
و این فضایی که در اینجا دارید چیزی نیست اما به عنوان تورفتگی خوانده می شود.

62
00:04:10,800 --> 00:04:15,480
و دلیل استفاده از تورفتگی ، خواندن کد است.

63
00:04:15,480 --> 00:04:19,380
بنابراین هر دو کد دقیقاً یکسان اجرا می شوند.

64
00:04:19,380 --> 00:04:21,779
آنها هیچ تاثیری در عملکرد ندارند.

65
00:04:21,779 --> 00:04:25,740
با این حال ، آنها در خوانایی کد تأثیر می گذارند.

66
00:04:25,920 --> 00:04:30,300
اگر کد به خوبی در نظر گرفته شده باشد ، خواندن آن کد بعداً بسیار ساده تر است.

67
00:04:30,840 --> 00:04:37,410
اکنون در زبانهای برنامه نویسی مانند C ، C Plus Plus و Java Insentation اساساً برای خوانایی کد استفاده می شود

68
00:04:37,410 --> 00:04:38,370
و قالب بندی

69
00:04:38,370 --> 00:04:40,830
با این حال ، در پایتون اینگونه نیست.

70
00:04:40,860 --> 00:04:44,430
در تورفتگی پایتون بخشی از نحو است.

71
00:04:44,430 --> 00:04:48,480
بنابراین اگر کد خود را تورفتگی نکنید ، این بدان معنی است که نحو شما اشتباه است.

72
00:04:48,480 --> 00:04:52,500
و در تورفتگی پایتون برای نشان دادن بلوک کد استفاده می شود.

73
00:04:52,530 --> 00:04:58,350
بنابراین ممکن است این جمله از الان معنی چندانی نداشته باشد ، اما از زمان شروع کار شروع به کار خواهد کرد

74
00:04:58,350 --> 00:04:59,610
نوشتن برخی از کد های پایتون.

75
00:04:59,640 --> 00:05:03,540
بنابراین اکنون بیایید کد جاوا را در مقابل کد پایتون از نظر تورفتگی مقایسه کنیم.

76
00:05:03,540 --> 00:05:09,390
بنابراین همانطور که در اینجا مشاهده می کنید ، ما یک حلقه ساده برای چاپ پنج رقم در اینجا در جاوا داریم و شما

77
00:05:09,390 --> 00:05:13,490
می توانید ببینید که این همان چیزی است که یک بلوک کد در جاوا به نظر می رسد.

78
00:05:13,500 --> 00:05:20,010
بنابراین یک بلوک کد چیزی نیست ، اما اساساً مجموعه خاصی از کد است که در داخل A گنجانده شده است

79
00:05:20,010 --> 00:05:21,000
حلقه خاص

80
00:05:21,000 --> 00:05:23,880
بنابراین اگر به این موضوع نگاهی بیندازید ، این یک حلقه است.

81
00:05:23,880 --> 00:05:29,340
و برای اینکه نشان دهیم می خواهیم این خط را در داخل حلقه قرار دهیم ، این را محصور کرده ایم

82
00:05:29,340 --> 00:05:31,950
داخل براکت های مجعد.

83
00:05:31,950 --> 00:05:38,940
بنابراین این براکت های مجعد نشان می دهد که این حلقه برای تکرار این مجموعه از کد باید تکرار شود.

84
00:05:39,090 --> 00:05:43,020
با این حال ، در پایتون ، ما در اینجا چنین براکت های مجعد نداریم.

85
00:05:43,230 --> 00:05:48,510
بنابراین در حال حاضر ما هیچ ایده ای نداریم که چه نوع کد در داخل حلقه برای آن گنجانده شده است.

86
00:05:48,780 --> 00:05:54,750
اما پایتون ، به جای استفاده از براکت های مجعد مانند آن ، پایتون از تورفتگی استفاده می کند.

87
00:05:54,750 --> 00:06:00,910
بنابراین به جای استفاده از براکت های مجعد برای نشان دادن این که ، خوب ، این کد در داخل حلقه است ، ما اساساً

88
00:06:00,910 --> 00:06:01,990
از تورفتگی استفاده کنید.

89
00:06:01,990 --> 00:06:08,710
بنابراین در پایتون ، پس از داشتن حلقه برای خط بعدی ، با دادن چهار فضای سفید چاپ می کنیم

90
00:06:08,710 --> 00:06:09,010
اینجا

91
00:06:09,010 --> 00:06:14,410
و این اساساً بدان معنی است که این عبارت چاپ در واقع در داخل حلقه برای حلقه گنجانده شده است.

92
00:06:14,410 --> 00:06:19,690
و این در واقع بخشی از Loop است ، برخلاف جاوا ، جایی که ما از براکت های فرفری استفاده کرده ایم.

93
00:06:19,990 --> 00:06:25,240
بنابراین این همان چیزی است که تورفتگی است و شما قادر خواهید بود که تورفتگی را به روشی بسیار بهتر درک کنید

94
00:06:25,240 --> 00:06:27,130
وقتی شروع به نوشتن کد پایتون می کنیم.

95
00:06:27,130 --> 00:06:32,770
بنابراین ما آموخته ایم که چرا پایتون به عنوان یک زبان برنامه نویسی هدف کلی خوانده می شود ، چرا تأکید می کند

96
00:06:32,770 --> 00:06:36,480
در مورد خوانایی کد و نحوه استفاده از تورفتگی.

97
00:06:36,490 --> 00:06:43,120
در سخنرانی بعدی ، بیایید پیش برویم و بدانیم که چرا پایتون به عنوان یک برنامه نویسی دینامیکی تایپ می شود

98
00:06:43,120 --> 00:06:43,660
زبان

