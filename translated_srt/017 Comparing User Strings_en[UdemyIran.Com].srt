1
00:00:00,020 --> 00:00:01,250
در این سخنرانی خاص

2
00:00:01,250 --> 00:00:07,520
بیایید سعی کنیم برنامه ای را بنویسیم که می خواهد رشته ای را از یک کاربر بپذیرد و آیا می خواهد بررسی کند که آیا

3
00:00:07,520 --> 00:00:11,990
آن رشته برابر با رشته موجود در حال حاضر است که ما در کد خود داریم.

4
00:00:12,140 --> 00:00:14,510
بنابراین بیایید مثالی برای انجام این کار بگیریم.

5
00:00:14,510 --> 00:00:20,030
بنابراین بیایید بگوییم در داخل برنامه ما ، ما یک رشته از قبل ذخیره شده داریم ، مانند برخی از رمز عبور ذخیره شده.

6
00:00:20,030 --> 00:00:23,090
بنابراین من متغیری به نام رمز عبور ذخیره شده ایجاد می کنم.

7
00:00:24,080 --> 00:00:27,920
و بیایید ببینیم ، این رمز عبور چیزی شبیه است.

8
00:00:27,920 --> 00:00:29,120
یک ، دو ، سه.

9
00:00:29,150 --> 00:00:29,750
مدیر

10
00:00:29,750 --> 00:00:30,560
یک ، دو ، سه.

11
00:00:30,590 --> 00:00:35,390
اکنون ، از نظر فنی ، هر زمان که می نوشتید برنامه های پایتون

12
00:00:35,390 --> 00:00:38,930
در داخل یک پرونده حضور داشته باشید زیرا این واقعاً یک عمل بد است.

13
00:00:38,930 --> 00:00:44,150
و دلیل این امر به این دلیل است که اگر کسی به کد منبع شما دسترسی پیدا کند ، می تواند به راحتی پیدا کند

14
00:00:44,150 --> 00:00:45,430
آن رمزهای عبور در اینجا.

15
00:00:45,440 --> 00:00:52,160
بنابراین در صورت برنامه های دنیای واقعی ، رمزهای عبور به طور معمول در پایگاه داده و همچنین رمزهای عبور ذخیره می شوند

16
00:00:52,160 --> 00:00:58,640
به عنوان رشته های ساده ذخیره نمی شوند ، اما در عوض این رمزهای عبور در واقع هشدار داده می شوند و سپس هش

17
00:00:58,640 --> 00:01:01,490
در واقع در آن پایگاه داده های خاص ذخیره می شود.

18
00:01:01,490 --> 00:01:03,170
بنابراین لازم نیست نگران آن باشید.

19
00:01:03,170 --> 00:01:07,610
از هم اکنون ، این فقط دانش عمومی است ، که فکر می کنم شما باید از آن آگاه باشید.

20
00:01:07,640 --> 00:01:08,180
خوب

21
00:01:08,180 --> 00:01:14,660
بنابراین اکنون یک بار که یک رشته رمز عبور در اینجا داریم ، بیایید بگوییم که می خواهیم رمز عبور را از کاربر بپذیریم

22
00:01:14,660 --> 00:01:20,720
و ما می خواهیم رشته وارد شده توسط کاربر را با این رشته موجود موجود که در اختیار داریم مقایسه کنیم.

23
00:01:20,840 --> 00:01:24,360
بنابراین بیایید بگوییم که می خواهیم رمز عبور را از کاربر بپذیریم.

24
00:01:24,360 --> 00:01:25,740
بنابراین من می گویم ورودی.

25
00:01:27,210 --> 00:01:36,630
رمز عبور را وارد کنید و بیایید این ورودی خاص را از کاربر در متغیری به نام رمز عبور کاربر ذخیره کنیم.

26
00:01:37,620 --> 00:01:39,650
بنابراین رمز عبور کاربر با این برابر است.

27
00:01:39,660 --> 00:01:46,530
بنابراین اکنون ما رمز عبور کاربر را می پذیریم و اکنون باید بررسی کنیم که آیا این رمز عبور کاربر برابر است

28
00:01:46,530 --> 00:01:47,100
این

29
00:01:47,100 --> 00:01:53,250
بنابراین در سخنرانی های قبلی ما قبلاً دو رشته یا دو شماره را مقایسه کرده ایم تا بررسی کنیم که آیا

30
00:01:53,250 --> 00:01:54,540
آنها برابر هستند یا نه.

31
00:01:54,540 --> 00:02:00,990
بنابراین برای اینکه در اینجا چک انجام دهم ، می توانم به سادگی بروم و چاپ را تایپ کنم و می توانم بگویم که ذخیره شده است

32
00:02:00,990 --> 00:02:03,060
رمز عبور ، برابر برابر است.

33
00:02:03,060 --> 00:02:07,200
و این اپراتور برابری است که بررسی می کند که آیا این دو رشته برابر هستند یا خیر.

34
00:02:07,200 --> 00:02:11,520
و ما می خواهیم بررسی کنیم که آیا رمز ایمن با رمز عبور کاربر برابر است یا خیر.

35
00:02:11,730 --> 00:02:17,370
حال اگر این درست باشد ، نتیجه این عبارت خاص درست خواهد بود.

36
00:02:17,460 --> 00:02:21,510
و اگر این درست نیست ، اگر کاربر رمز عبور را وارد کند چیز دیگری است.

37
00:02:21,510 --> 00:02:25,050
و این مورد خاص ، نتیجه این چیز نادرست خواهد بود.

38
00:02:25,320 --> 00:02:28,110
بنابراین اگر این را ذخیره کنم و اگر این کار را اجرا کنم.

39
00:02:29,280 --> 00:02:30,660
من می توانم رمز را وارد کنم.

40
00:02:30,690 --> 00:02:34,230
بنابراین این بار ، بیایید بگوییم که می خواهیم رمزعبور صحیح را وارد کنیم.

41
00:02:34,230 --> 00:02:35,460
بنابراین یک ، دو ، سه.

42
00:02:35,490 --> 00:02:36,060
مدیر

43
00:02:36,060 --> 00:02:36,900
یک ، دو ، سه.

44
00:02:36,930 --> 00:02:40,200
اگر من به Enter ضربه بزنم ، نتیجه را درست می کنیم.

45
00:02:40,350 --> 00:02:44,730
اکنون ، به همین ترتیب ، اگر این کار را یک بار دیگر اجرا کنم و بیایید بگویم اگر در اینجا اشتباه کنم.

46
00:02:44,730 --> 00:02:48,510
بنابراین بیایید بگوییم که رمز را به عنوان یک دو ، سه مدیر وارد می کنم.

47
00:02:48,510 --> 00:02:49,920
یک ، دو ، یک.

48
00:02:50,160 --> 00:02:56,040
بنابراین اگر من این بار را وارد کردم ، نتیجه را نادرست می گیرم که رمز عبور نادرست است.

49
00:02:56,070 --> 00:03:01,740
اکنون ، از نظر فنی کاری که در پایتون انجام می دهید این است که هر زمان که می خواهید یک متغیر خاص را بررسی کنید

50
00:03:01,740 --> 00:03:05,670
برابر با متغیر دیگر است ، شما از این طریق چک می کنید.

51
00:03:05,670 --> 00:03:11,070
اما به طور معمول این چک در یک بیانیه مشروط ضمیمه شده است و ما آن را پوشش نداده ایم

52
00:03:11,070 --> 00:03:13,050
اگر اظهارات مشروط از هم اکنون.

53
00:03:13,080 --> 00:03:14,850
بعداً می خواهیم آن را پوشش دهیم.

54
00:03:14,850 --> 00:03:20,070
اما کاری که آنها به شما امکان می دهند انجام دهید این است که در صورت صحیح بودن رمز عبور به شما امکان می دهند برخی از اقدامات را انجام دهید.

55
00:03:20,070 --> 00:03:25,650
بنابراین بیایید بگوییم ، به عنوان مثال ، اگر رمز عبور در واقع مطابقت دارد ، می خواهید پیامی مانند نمایش دهید

56
00:03:25,650 --> 00:03:27,810
تبریک می گویم ، رمز عبور صحیح است.

57
00:03:27,810 --> 00:03:33,040
و اگر این رمز عبور صحیح نیست ، پس بیایید بگوییم که می خواهید کد دیگری را اجرا کنید

58
00:03:33,040 --> 00:03:36,820
چیزی شبیه ببخشید ، رمز عبور نادرست وارد شده است.

59
00:03:36,820 --> 00:03:38,020
لطفا بعداً امتحان کنید

60
00:03:38,020 --> 00:03:43,060
بنابراین این می تواند با استفاده از بیانیه IF مشروط که می خواهیم در آن بیاموزیم انجام شود

61
00:03:43,060 --> 00:03:44,650
بخش بعدی این دوره.

62
00:03:45,130 --> 00:03:49,390
بنابراین این برای این سخنرانی است و من شما را در روز بعدی می بینم.

