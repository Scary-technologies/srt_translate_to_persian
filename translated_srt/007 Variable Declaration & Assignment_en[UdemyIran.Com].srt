1
00:00:00,020 --> 00:00:00,710
در این سخنرانی

2
00:00:00,710 --> 00:00:03,430
بیایید در مورد متغیرهای پایتون صحبت کنیم.

3
00:00:03,440 --> 00:00:09,380
بنابراین هر زمان که معمولاً یک برنامه پایتون یا هر برنامه ای را در هر زبان برنامه نویسی برای آن می نویسیم

4
00:00:09,380 --> 00:00:11,740
مهم ، ما همیشه باید با داده ها کار کنیم.

5
00:00:11,750 --> 00:00:14,990
بنابراین یک برنامه چیزی نیست ، اما مجموعه ای از دستورالعمل ها است.

6
00:00:14,990 --> 00:00:19,520
و به طور معمول وقتی یک برنامه می نویسید ، برای دستکاری نوعی داده نوشته شده است.

7
00:00:19,520 --> 00:00:24,770
بنابراین شما مجموعه خاصی از داده ها را دارید که باید برای دستکاری آنها داشته باشید ، و سپس مجموعه خاصی از آن را می نویسید

8
00:00:24,770 --> 00:00:26,930
دستورالعمل دستکاری آن داده ها.

9
00:00:26,960 --> 00:00:31,850
حال سوال این است که دقیقاً کجا داده های خاص را ذخیره می کنید؟

10
00:00:31,850 --> 00:00:37,820
بنابراین هر زمان که مجبور شوید داده ها را در یک برنامه ذخیره کنید ، کاری که انجام می دهیم این است که از یک متغیر استفاده می کنیم.

11
00:00:37,820 --> 00:00:39,530
بنابراین یک متغیر چیزی نیست.

12
00:00:39,530 --> 00:00:45,230
اما می توانید بگویید که این چیزی است که به نوعی ارزش اختصاص می یابد.

13
00:00:45,230 --> 00:00:50,030
بنابراین برای درک این موضوع به روشی بسیار بهتر ، بیایید یک متغیر ایجاد کنیم.

14
00:00:50,030 --> 00:00:56,300
بنابراین هر وقت مجبور به ایجاد یک متغیر هستید ، اولین کاری که انجام می دهید این است که به آن متغیر می دهید

15
00:00:56,300 --> 00:00:57,410
نوعی نام

16
00:00:57,410 --> 00:01:04,620
بنابراین برای ساده نگه داشتن کارها ، من به سادگی متغیری را به نام A ایجاد می کنم و بیایید در این مورد خاص بگوییم

17
00:01:04,620 --> 00:01:07,410
متغیر من می خواهم یک مقدار را ذخیره کنم.

18
00:01:07,530 --> 00:01:10,640
بنابراین بیایید بگوییم ارزشی که می خواهم ذخیره کنم 200 است.

19
00:01:10,650 --> 00:01:18,120
بنابراین برای ذخیره یک مقدار 200 در متغیر ، A ، می گویم برابر با 200 است.

20
00:01:19,130 --> 00:01:25,490
و این برابر با نشانه ای است که شما در اینجا دارید ، یک علامت برابری نیست ، بلکه در عوض آن را به عنوان خوانده می شود

21
00:01:25,490 --> 00:01:31,870
یک اپراتور واگذاری در پایتون ، که برای اختصاص نوعی مقدار به یک متغیر معین استفاده می شود.

22
00:01:31,880 --> 00:01:38,480
بنابراین در اینجا ما مقدار 200 را به متغیر A اختصاص داده ایم و به محض اینکه وارد ENTER شدم.

23
00:01:38,960 --> 00:01:45,380
اکنون مسئله این است که مقدار 200 به متغیر A اختصاص می یابد و اگر واقعاً می خواهید بررسی کنید که آیا

24
00:01:45,380 --> 00:01:51,080
این مقدار اختصاص داده شده است ، شما به سادگی جلو می روید و می گویید چاپ و سپس بیایید مقدار را چاپ کنیم

25
00:01:51,080 --> 00:01:51,770
از a

26
00:01:51,950 --> 00:01:57,740
بنابراین ، وقتی ارزش A را چاپ می کنم ، همانطور که می بینید ، اکنون ارزش A را به 200 می رسانم.

27
00:01:57,920 --> 00:02:05,000
و این به این دلیل است که وقتی مقدار خاصی را به یک متغیر اختصاص می دهید ، آنچه ما در اصل انجام می دهیم

28
00:02:05,000 --> 00:02:10,759
این است که ما مقدار 200 و در یک مکان خاص حافظه را ذخیره می کنیم.

29
00:02:10,759 --> 00:02:17,690
بنابراین هر زمان که متغیر ایجاد کنید ، کاری که پایتون انجام می دهد این است که پایتون در واقع یک مکان حافظه ایجاد می کند

30
00:02:17,690 --> 00:02:22,620
و سپس اساساً آن مقدار خاص را در آن مکان حافظه خاص ذخیره می کند.

31
00:02:22,620 --> 00:02:27,270
و هر وقت می گوییم چاپ A ، اساساً به آن مکان حافظه دسترسی پیدا می کند.

32
00:02:27,270 --> 00:02:32,550
این مقدار را می یابد که در واقع در آنجا ذخیره می شود ، و سپس مقدار آن را چاپ می کند

33
00:02:32,550 --> 00:02:34,950
در آنجا ذخیره شده ، که در این مورد است ، 200.

34
00:02:35,190 --> 00:02:41,520
اکنون ، چیز دیگری که باید در مورد متغیرها درک کنید این است که مقدار یک متغیر می تواند

35
00:02:41,520 --> 00:02:44,880
تغییر در طول عمر یک برنامه خاص.

36
00:02:44,880 --> 00:02:48,900
بنابراین بیایید بگوییم اکنون مقدار 200 را به متغیر اختصاص داده ایم.

37
00:02:48,900 --> 00:02:53,970
حال بیایید بگوییم در طول برنامه ما پیش می رویم و ارزش دیگری را نیز اختصاص می دهیم.

38
00:02:53,970 --> 00:02:57,930
بنابراین بیایید اکنون بگوییم اگر ارزش A شود ، بیایید بگوییم ده.

39
00:02:58,710 --> 00:02:59,700
اگر این اتفاق بیفتد

40
00:02:59,700 --> 00:03:05,430
و این بار اگر من جلو می روم و سعی می کنم ارزش A را همانطور که اکنون می بینید چاپ کنم ، می گوید

41
00:03:05,430 --> 00:03:09,660
ارزش A ده است و دیگر 200 نیست.

42
00:03:09,780 --> 00:03:15,960
بنابراین این بدان معناست که هر زمان که متغیر ایجاد کنید ، ما در واقع یک مقدار خاص و صرفه جویی در اختیار داریم

43
00:03:15,960 --> 00:03:17,640
آن را به یک مکان حافظه.

44
00:03:17,640 --> 00:03:23,520
و مقدار ذخیره شده در آن محل حافظه می تواند هر زمان که بخواهیم در مدت زمان تغییر کند

45
00:03:23,520 --> 00:03:24,210
برنامه

46
00:03:24,210 --> 00:03:30,480
نکته دیگری که باید یاد بگیریم این است که بیایید بگوییم اگر این مترجم پایتون را ببندم ، بیایید خاتمه دهیم

47
00:03:30,480 --> 00:03:38,160
این و بیایید بگوییم اگر دوباره این چیز را دوباره باز کنم ، و حالا بیایید بگوییم که من دوباره مترجم را شروع می کنم.

48
00:03:38,890 --> 00:03:44,320
و حالا اگر سعی کنم مقدار A را همانطور که می بینید چاپ کنم ، می خواهید خطایی دریافت کنید و این است

49
00:03:44,320 --> 00:03:47,190
می گویم که این نام تعریف نشده است.

50
00:03:47,200 --> 00:03:53,860
و این به این دلیل است که هر زمان متغیری را ایجاد می کنیم که در یک مکان حافظه موقت ذخیره می شود و

51
00:03:53,860 --> 00:03:59,830
این فقط در طول اجرای برنامه معتبر است ، بنابراین شما نمی توانید پیش بروید و مدت طولانی را ذخیره کنید

52
00:03:59,830 --> 00:04:01,510
داده های مربوط به متغیر.

53
00:04:01,510 --> 00:04:07,000
شما فقط می توانید داده هایی را که در طول چرخه زندگی اجرای خاص معتبر است ذخیره کنید

54
00:04:07,000 --> 00:04:07,750
برنامه

55
00:04:07,750 --> 00:04:10,240
بنابراین این چیز دیگری است که شما باید درک کنید.

56
00:04:10,270 --> 00:04:13,360
حالا بیایید جلو برویم و بیایید متغیر دیگری ایجاد کنیم.

57
00:04:13,360 --> 00:04:16,300
اکنون در یک متغیر می توانید رشته ها را نیز ذخیره کنید.

58
00:04:16,300 --> 00:04:22,330
بنابراین متغیرها در واقع برای صرفه جویی در مقادیر عدد صحیح محدود نمی شوند ، اما در عوض می توانید پس انداز کنید

59
00:04:22,330 --> 00:04:25,600
مقادیر رشته و همچنین انواع دیگر مقادیر نیز.

60
00:04:25,600 --> 00:04:31,630
به عنوان مثال ، بیایید بگوییم اگر می خواهم برنامه ای ایجاد کنم که در آن می خواهم نام یک خاص را ذخیره کنم

61
00:04:31,630 --> 00:04:37,510
شخص ، بنابراین در اینجا من یک متغیر مانند نام ایجاد می کنم و از اپراتور واگذاری برای اختصاص استفاده می کنم

62
00:04:37,510 --> 00:04:39,080
این متغیر یک مقدار.

63
00:04:39,080 --> 00:04:45,200
بنابراین در اینجا ، همانطور که می خواهم به آن مقدار بدهم ، مقداری را به آن اختصاص دهم که از یک نوع رشته باشد ، من

64
00:04:45,200 --> 00:04:50,750
از نقل قول های مضاعف استفاده می کنم و در اینجا من نوعی از نام inte end را اختصاص می دهم.

65
00:04:50,750 --> 00:04:53,780
و اکنون نام به نام متغیر اختصاص می یابد.

66
00:04:53,780 --> 00:05:00,110
بنابراین اگر من چاپ می کنم ، و اکنون اگر سعی کنم ارزش نام را چاپ کنم ، جان را به اینجا می رسانم زیرا جان

67
00:05:00,110 --> 00:05:01,670
چیزی است که در واقع در آنجا ذخیره شده است.

68
00:05:01,880 --> 00:05:08,840
و همچنین ، اگر می خواهید نوع داده یک متغیر را بررسی کنید ، به سادگی نوع و سپس در داخل خود می گویید

69
00:05:08,840 --> 00:05:10,550
می تواند به نام متغیر منتقل شود.

70
00:05:10,550 --> 00:05:13,310
بنابراین در این حالت ، نام متغیر نام است.

71
00:05:13,490 --> 00:05:20,870
بنابراین در اینجا ، همانطور که مشاهده می کنید ، می گوید STR Class ، به این معنی که نوع این متغیر اساساً است

72
00:05:20,870 --> 00:05:21,590
یک رشته

73
00:05:22,360 --> 00:05:28,170
اکنون ، به طور مشابه با یک متغیر ، می توانید مقداری مانند شناور یا اعشار را نیز اختصاص دهید.

74
00:05:28,180 --> 00:05:35,800
بنابراین در اینجا می توانم یک متغیر ایجاد کنم ، یک مقدار 3.2 به آن می توانم نوع A را بررسی کنم و این را می گوید

75
00:05:35,800 --> 00:05:36,670
این یک شناور است.

76
00:05:36,670 --> 00:05:41,140
و اگر سعی کنم ارزش A را چاپ کنم ، 3.2 به من می دهد.

77
00:05:41,170 --> 00:05:45,190
به همین ترتیب ، می توانید یک مقدار بولی را در داخل یک متغیر نیز ذخیره کنید.

78
00:05:45,190 --> 00:05:48,160
بنابراین می توانید بگویید B برابر است.

79
00:05:48,960 --> 00:05:50,880
من می توانم نوع این را بررسی کنم.

80
00:05:52,330 --> 00:05:56,650
این بولی را می بیند ، و من حتی می توانم ارزش آن را نیز چاپ کنم.

81
00:05:56,650 --> 00:06:00,370
بنابراین اگر من B را در اینجا دیدم ، همانطور که می بینید ، این درست است.

82
00:06:00,370 --> 00:06:06,340
و یک نکته جالب دیگر در مورد پایتون این است که متغیرهای پایتون در واقع پویا هستند

83
00:06:06,340 --> 00:06:11,770
که در سایر زبان های برنامه نویسی ، هر زمان که مجبور به ایجاد متغیرها شوید ، به طور معمول به آن نیاز دارید

84
00:06:11,770 --> 00:06:13,750
برای تنظیم نوع داده متغیر.

85
00:06:13,750 --> 00:06:19,660
به عنوان مثال ، بیایید بگوییم که شما متغیر را برای ذخیره قیمت یک مورد خاص ایجاد می کنید.

86
00:06:19,660 --> 00:06:23,950
بنابراین می توانید بگویید که قیمت برابر است و می توانید قیمت را تعیین کنید ، بیایید بگوییم 100.

87
00:06:23,950 --> 00:06:28,990
اما اکنون کاری که می توانید انجام دهید این است که اگر سعی کنید ارزش قیمت را چاپ کنید ، این موارد را دریافت خواهید کرد

88
00:06:28,990 --> 00:06:29,800
ارزش

89
00:06:29,800 --> 00:06:35,320
اگر سعی کنید نوع قیمت را بررسی کنید ، می توانید ببینید که این یک عدد صحیح است.

90
00:06:35,320 --> 00:06:39,520
بنابراین اکنون این قیمت متغیر خاص قادر به صرفه جویی در یک عدد صحیح است.

91
00:06:40,060 --> 00:06:46,600
با این حال ، اگر می گویم قیمت برابر است و در اینجا اگر آن را به یک رشته تغییر دهم.

92
00:06:46,600 --> 00:06:52,180
بنابراین در اینجا ، همانطور که مشاهده می کنید ، من مستقیماً نوع داده این متغیر خاص را از یک عدد صحیح تغییر می دهم

93
00:06:52,280 --> 00:06:55,550
به یک رشته و ما هیچ نوع خطایی دریافت نمی کنیم.

94
00:06:55,820 --> 00:07:01,670
با این حال ، در سایر زبان های برنامه نویسی ، اگر متغیر عدد صحیح ایجاد کنید ، دیگر نمی توانید بروید

95
00:07:01,670 --> 00:07:03,860
جلوتر و یک رشته را در آن ذخیره کنید.

96
00:07:04,100 --> 00:07:10,250
با این حال ، در پایتون ، اگر اکنون نوع قیمت متغیر را بررسی کنم ، می توانم این را پیدا کنم

97
00:07:10,250 --> 00:07:11,330
اکنون یک رشته است.

98
00:07:11,330 --> 00:07:15,470
بنابراین این نوع از یک عدد صحیح به یک رشته در طول برنامه تبدیل شده است.

99
00:07:15,470 --> 00:07:21,320
و به همین دلیل می گوییم که پایتون یک زبان دینامیکی تایپ شده است ، به این معنی که متغیرها

100
00:07:21,320 --> 00:07:26,930
در پایتون پویا است و نوع داده آن متغیرها را می توان به عنوان مثال تغییر داد.

101
00:07:26,930 --> 00:07:32,990
بنابراین امیدوارم که شما در مورد آنچه که دقیقاً متغیرها در پایتون وجود دارد ، ایده بگیرید ، چگونه می توان از آنها استفاده کرد

102
00:07:32,990 --> 00:07:36,650
برای ذخیره مقادیر خاص و اختصاص یک مکان حافظه به آن.

103
00:07:36,680 --> 00:07:44,030
چگونه می توان مقدار یک متغیر را تغییر داد و همچنین چگونه در پایتون نوع داده یک متغیر نیست

104
00:07:44,030 --> 00:07:44,780
ثابت

105
00:07:44,960 --> 00:07:51,200
بنابراین اکنون ، هنگامی که ما در سخنرانی بعدی در مورد متغیرها آموخته ایم ، بیایید برخی از کنوانسیون های نامگذاری را یاد بگیریم

106
00:07:51,200 --> 00:07:52,700
درباره متغیرهای پایتون.

107
00:07:52,700 --> 00:07:56,150
اینگونه است که باید متغیرهای خود را در پایتون نامگذاری کنید.

108
00:07:56,150 --> 00:07:59,120
بنابراین بیایید یاد بگیریم که چگونه این کار را در سخنرانی بعدی انجام دهیم.

